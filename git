                                about use git
  
  
  
  
 create a local empty diretory : mkdir diretort-name
 cd diretory-name
 pwd（print working directory）用于输出当前工作目录的绝对路径
                                
 This directory becomes a repository that Git can manage: git init


初次提交
  git add file
  git commit -m"wrote a file"
  
再次提交
  git add file
  git commit -m"message"
  
git status 查看当前状态
  
git log命令显示从最近到最远的提交日志，我们可以看到3次提交
--pretty=oneline 显示一行

$ git reset --hard 
HEAD是指针 与c语言的指针相似

git reflog 查看所有版本号

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

cat readme.txt  读取文件

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，
分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，
不过前提是没有推送到远程库。

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，
但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

添加远程库
现在的情景是，你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，
这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。

in GitHub创建一个新的仓库


目前，在GitHub上的这个learngit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，
也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。

现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：


$ git push origin master


要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。

Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。


修改github的repo仓库
git remote rm origin
If you want to use SSH URLs, something like
git remote set-url origin git@github.com:weitanai/mysite.git
